{"version":3,"sources":["../node_modules/redux-form/es/Form.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0___default","n","_babel_runtime_helpers_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__","_babel_runtime_helpers_inheritsLoose__WEBPACK_IMPORTED_MODULE_1___default","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","_ReduxFormContext__WEBPACK_IMPORTED_MODULE_4__","Form","_Component","props","_this","call","this","_reduxForm","Error","_proto","prototype","componentDidMount","registerInnerOnSubmit","onSubmit","componentDidUpdate","prevProps","render","_this$props","rest","a","createElement","propTypes","func","isRequired","object","__webpack_exports__","Object","module","exports","descriptionBlock","contact","postsBlock","posts","item","ProfileStatusWithHooks","_useState","useState","_useState2","slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","react_default","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileDataFormReduxForm","reduxForm","form","_ref","handleSubmit","profile","error","className","style","formSummaryError","createField","Input","type","Textarea","keys","contacts","map","key","s","ProfileData","_ref2","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","ProfileInfo_Contact","contactTitle","contactValue","Contact","_ref3","ProfileInfo","savePhoto","saveProfile","preloader","src","photos","large","userPhoto","mainPhoto","target","files","length","ProfileInfo_ProfileDataForm","initialValues","formData","then","ProfileInfo_ProfileData","ProfileInfo_ProfileStatusWithHooks","Post","message","likes","MyPosts","React","memo","postsElements","p","MyPosts_Post_Post","id","likesCount","createRef","AddPostFormRedux","values","addPost","newPostText","maxLenghtCreator10","maxLenghtCreator","Field","name","component","placeholder","validate","required","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","Profile_ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevState","snapshot","components_Profile_Profile","assign","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.37b2fa8b.chunk.js","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withReduxForm } from './ReduxFormContext';\n\nvar Form = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Form, _Component);\n\n  function Form(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n\n    if (!props._reduxForm) {\n      throw new Error('Form must be inside a component decorated with reduxForm()');\n    }\n\n    return _this;\n  }\n\n  var _proto = Form.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.props._reduxForm.registerInnerOnSubmit(this.props.onSubmit);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.props.onSubmit !== prevProps.onSubmit) {\n      this.props._reduxForm.registerInnerOnSubmit(this.props.onSubmit);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _reduxForm = _this$props._reduxForm,\n        rest = _objectWithoutPropertiesLoose(_this$props, [\"_reduxForm\"]);\n\n    return /*#__PURE__*/React.createElement(\"form\", rest);\n  };\n\n  return Form;\n}(Component);\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  _reduxForm: PropTypes.object\n};\nexport default withReduxForm(Form);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3B5fC\",\"contact\":\"ProfileInfo_contact__3VyWZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2l7Ca\",\"posts\":\"MyPosts_posts__1X2eX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3ZPB6\"};","import React, {useEffect, useState} from 'react';\r\n\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) =>{\r\n\r\n    let [editMode, setEditMode ] = useState(false);\r\n    let [status, setStatus ] = useState( props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    },[props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus( e.currentTarget.value\r\n        ) ;\r\n    }\r\n            return (\r\n                <div>\r\n                    { !editMode &&\r\n                    <div>\r\n                       <b>Status: </b> <span onDoubleClick={activateEditMode}>{props.status || '-----'} </span>\r\n                    </div>\r\n                    }\r\n                    {editMode && <div>\r\n                        <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}\r\n                               value={status}\r\n                               ></input>\r\n                    </div>\r\n                    }\r\n                </div>\r\n              )\r\n        }\r\n\r\n    export default ProfileStatusWithHooks;","import React from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport style from \"../../common/FormsControls/FormsControl.module.css\"\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div>\r\n            <button>save</button>\r\n        </div>\r\n        {error && <div className={style.formSummaryError}>\r\n            {error}\r\n        </div>}\r\n        <div>\r\n            <b>Full name</b>: {createField(\"Full name\", \"fullName\", [], Input)}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\r\n        </div>\r\n\r\n        <div>\r\n            <b>My professional\r\n                skills</b>:{createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n        </div>\r\n\r\n        <div>\r\n            <b>About me</b>:\r\n            {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n        </div>\r\n        *\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <div key={key} className={s.contact}>\r\n                <b>{key}:{createField(key, \"contacts.\" + key, [], Input)}</b>\r\n            </div>\r\n        })}\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm;","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/preloader/preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData)\r\n            .then(() => {\r\n                setEditMode(false);\r\n            })\r\n    }\r\n\r\n    return <div>\r\n        <div className={s.descriptionBlock}>\r\n            <img src={profile.photos.large || userPhoto} className={s.mainPhoto}/>\r\n\r\n            {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}/>}\r\n\r\n            {editMode\r\n                ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n                : <ProfileData goToEditMode={() => {\r\n                    setEditMode(true)\r\n                }} profile={profile} isOwner={isOwner}/>}\r\n\r\n            <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return <div>\r\n        {isOwner && <div>\r\n            <button onClick={goToEditMode}>edit</button>\r\n        </div>}\r\n        <div>\r\n            <b>Full name</b>: {profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : 'no'}\r\n        </div>\r\n        {profile.lookingForAJob &&\r\n        <div>\r\n            <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n        </div>\r\n        }\r\n        <div>\r\n            <b>About me</b>: {profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n        })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n  return (\r\n    <div className={s.item}>\r\n        {props.message}\r\n      <div><span>{props.likes}Like</span></div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default Post;\r\n\r\n","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, Form, reduxForm} from \"redux-form\";\r\nimport {maxLenghtCreator, required} from \"../../../Utils/Validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\n\r\nconst MyPosts = React.memo((props) => {\r\n    let postsElements =\r\n        props.posts.map( p => <Post key={p.id} message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddPostFormRedux onSubmit={onAddPost} />\r\n            <div className={s.posts}>\r\n                { postsElements }\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nconst maxLenghtCreator10 = maxLenghtCreator(10)\r\nconst AddMyPost = (props) => {\r\n    return(\r\n        <Form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                    <Field name='newPostText' component={Textarea}\r\n                           placeholder={'Post message'}\r\n                           validate={[required,maxLenghtCreator10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </Form>\r\n    )\r\n}\r\n\r\nconst  AddPostFormRedux = reduxForm({form: 'profileAddMyPost'})(AddMyPost)\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../Redax/profile-reduser\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n    }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\n\r\nconst Profile = (props) => {\r\n    return <div>\r\n        <ProfileInfo  savePhoto={props.savePhoto}\r\n                      isOwner={props.isOwner}\r\n                      profile={props.profile}\r\n                      status={props.status}\r\n                      saveProfile={props.saveProfile}\r\n                      updateStatus={props.updateStatus}/>\r\n        <MyPostsContainer />\r\n    </div>\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../Redax/profile-reduser\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner={!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     savePhoto={this.props.savePhoto}/>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\n\r\nexport default compose(connect(mapStateToProps, {\r\n    getUserProfile,\r\n    getStatus,\r\n    updateStatus,savePhoto,saveProfile\r\n}), withRouter)(ProfileContainer)\r\n\r\n\r\n\r\n"],"sourceRoot":""}