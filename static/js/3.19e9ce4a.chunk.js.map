{"version":3,"sources":["../node_modules/redux-form/es/Form.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0___default","n","_babel_runtime_helpers_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__","_babel_runtime_helpers_inheritsLoose__WEBPACK_IMPORTED_MODULE_1___default","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","_ReduxFormContext__WEBPACK_IMPORTED_MODULE_4__","Form","_Component","props","_this","call","this","_reduxForm","Error","_proto","prototype","componentDidMount","registerInnerOnSubmit","onSubmit","componentDidUpdate","prevProps","render","_this$props","rest","a","createElement","propTypes","func","isRequired","object","__webpack_exports__","Object","module","exports","descriptionBlock","postsBlock","posts","item","React","Component","ProfileStatusWithHooks","_useState","useState","_useState2","slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","react_default","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","_ref","profile","className","s","src","photos","large","ProfileInfo_ProfileStatusWithHooks","preloader","Post","message","likes","MyPosts","memo","postsElements","map","p","MyPosts_Post_Post","likesCount","createRef","AddPostFormRedux","values","addPost","newPostText","maxLenghtCreator10","maxLenghtCreator","reduxForm","form","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","Profile_ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","components_Profile_Profile","assign","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.19e9ce4a.chunk.js","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withReduxForm } from './ReduxFormContext';\n\nvar Form = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Form, _Component);\n\n  function Form(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n\n    if (!props._reduxForm) {\n      throw new Error('Form must be inside a component decorated with reduxForm()');\n    }\n\n    return _this;\n  }\n\n  var _proto = Form.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.props._reduxForm.registerInnerOnSubmit(this.props.onSubmit);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.props.onSubmit !== prevProps.onSubmit) {\n      this.props._reduxForm.registerInnerOnSubmit(this.props.onSubmit);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _reduxForm = _this$props._reduxForm,\n        rest = _objectWithoutPropertiesLoose(_this$props, [\"_reduxForm\"]);\n\n    return /*#__PURE__*/React.createElement(\"form\", rest);\n  };\n\n  return Form;\n}(Component);\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  _reduxForm: PropTypes.object\n};\nexport default withReduxForm(Form);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3B5fC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2l7Ca\",\"posts\":\"MyPosts_posts__1X2eX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3ZPB6\"};","import React from 'react';\r\n\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () =>  {\r\n        this.setState({\r\n            editMode: true\r\n        });\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n    onStatusChange = (e) => {\r\n       this.setState({\r\n           status:e.currentTarget.value\r\n       }) ;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(prevProps.status !== this.props.status){\r\n            this.setState({\r\n                status:this.props.status\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n            return (\r\n                <div>\r\n                    {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={this.activateEditMode}>{this.props.status || '-----'}</span>\r\n                    </div>\r\n                    }\r\n                    {this.state.editMode && <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode} value={this.state.status}></input>\r\n                    </div>\r\n                    }\r\n                </div>\r\n              )\r\n        }\r\n    }\r\n    export default ProfileStatus;","import React, {useEffect, useState} from 'react';\r\n\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) =>{\r\n\r\n    let [editMode, setEditMode ] = useState(false);\r\n    let [status, setStatus ] = useState( props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    },[props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus( e.currentTarget.value\r\n        ) ;\r\n    }\r\n            return (\r\n                <div>\r\n                    { !editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={activateEditMode}>{props.status || '-----'} </span>\r\n                    </div>\r\n                    }\r\n                    {editMode && <div>\r\n                        <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}\r\n                               value={status}\r\n                               ></input>\r\n                    </div>\r\n                    }\r\n                </div>\r\n              )\r\n        }\r\n\r\n    export default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/preloader/preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if(!profile) {\r\n        return <Preloader />\r\n    }\r\n    return <div>\r\n        <div className={s.descriptionBlock}>\r\n           <img src={profile.photos.large}/>\r\n           <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n  return (\r\n    <div className={s.item}>\r\n        {props.message}\r\n      <div><span>{props.likes}Like</span></div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default Post;\r\n\r\n","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, Form, reduxForm} from \"redux-form\";\r\nimport {maxLenghtCreator, required} from \"../../../Utils/Validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\n\r\nconst MyPosts = React.memo((props) => {\r\n    let postsElements =\r\n        props.posts.map( p => <Post message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddPostFormRedux onSubmit={onAddPost} />\r\n            <div className={s.posts}>\r\n                { postsElements }\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nconst maxLenghtCreator10 = maxLenghtCreator(10)\r\nconst AddMyPost = (props) => {\r\n    return(\r\n        <Form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                    <Field name='newPostText' component={Textarea}\r\n                           placeholder={'Post message'}\r\n                           validate={[required,maxLenghtCreator10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </Form>\r\n    )\r\n}\r\n\r\nconst  AddPostFormRedux = reduxForm({form: 'profileAddMyPost'})(AddMyPost)\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../Redax/profile-reduser\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n    }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\n\r\nconst Profile = (props) => {\r\n    return <div>\r\n        <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n        <MyPostsContainer />\r\n    </div>\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../Redax/profile-reduser\";\r\nimport { withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component  {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId)\r\n    }\r\n    \r\n\r\n    render() {\r\n\r\n    return (\r\n        <Profile {...this.props} profile={this.props.profile}\r\n                                 status={this.props.status}\r\n                                 updateStatus={this.props.updateStatus}/>\r\n    )\r\n    }\r\n}\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\n\r\nexport default compose(connect (mapStateToProps, {getUserProfile, getStatus, updateStatus}),withRouter)(ProfileContainer)\r\n\r\n\r\n\r\n"],"sourceRoot":""}